from returns.maybe import Maybe as Maybe
from returns.primitives.hkt import KindN as KindN
from returns.result import Result as Result

def flatten(container: KindN[_BindableKind, KindN[_BindableKind, _FirstType, _SecondType, _ThirdType], _SecondType, _ThirdType]) -> KindN[_BindableKind, _FirstType, _SecondType, _ThirdType]: ...
def result_to_maybe(result_container: Result[_FirstType, _SecondType]) -> Maybe[_FirstType]: ...
def maybe_to_result(maybe_container: Maybe[_FirstType]) -> Result[_FirstType, None]: ...
