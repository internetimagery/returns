from typing import Any, Callable, NoReturn

def identity(instance: _FirstType) -> _FirstType: ...
def compose(first: Callable[[_FirstType], _SecondType], second: Callable[[_SecondType], _ThirdType]) -> Callable[[_FirstType], _ThirdType]: ...
def tap(function: Callable[[_FirstType], Any]) -> Callable[[_FirstType], _FirstType]: ...
def untap(function: Callable[[_FirstType], Any]) -> Callable[[_FirstType], None]: ...
def raise_exception(exception: Exception) -> NoReturn: ...
def not_(function: Callable[..., bool]) -> Callable[..., bool]: ...
