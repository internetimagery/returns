from returns.future import Future as Future
from returns.io import IO as IO
from returns.primitives.hkt import Kind1 as Kind1
from typing import Awaitable, Callable

async def async_map(function: Callable[[_ValueType], _NewValueType], inner_value: Awaitable[_ValueType]) -> _NewValueType: ...
async def async_apply(container: Future[Callable[[_ValueType], _NewValueType]], inner_value: Awaitable[_ValueType]) -> _NewValueType: ...
async def async_bind(function: Callable[[_ValueType], Kind1[Future, _NewValueType]], inner_value: Awaitable[_ValueType]) -> _NewValueType: ...
async def async_bind_awaitable(function: Callable[[_ValueType], Awaitable[_NewValueType]], inner_value: Awaitable[_ValueType]) -> _NewValueType: ...
async def async_bind_async(function: Callable[[_ValueType], Awaitable[Kind1[Future, _NewValueType]]], inner_value: Awaitable[_ValueType]) -> _NewValueType: ...
async def async_bind_io(function: Callable[[_ValueType], IO[_NewValueType]], inner_value: Awaitable[_ValueType]) -> _NewValueType: ...
