from returns.future import Future as Future, FutureResult as FutureResult
from returns.io import IO as IO, IOResult as IOResult
from returns.primitives.hkt import Kind2 as Kind2
from returns.result import Result as Result
from typing import Any, Awaitable, Callable

async def async_swap(inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_ErrorType, _ValueType]: ...
async def async_map(function: Callable[[_ValueType], _NewValueType], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_apply(container: FutureResult[Callable[[_ValueType], _NewValueType], _ErrorType], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind(function: Callable[[_ValueType], Kind2[FutureResult, _NewValueType, _ErrorType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind_awaitable(function: Callable[[_ValueType], Awaitable[_NewValueType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind_async(function: Callable[[_ValueType], Awaitable[Kind2[FutureResult, _NewValueType, _ErrorType]]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind_result(function: Callable[[_ValueType], Result[_NewValueType, _ErrorType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind_ioresult(function: Callable[[_ValueType], IOResult[_NewValueType, _ErrorType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind_io(function: Callable[[_ValueType], IO[_NewValueType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind_future(function: Callable[[_ValueType], Future[_NewValueType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_bind_async_future(function: Callable[[_ValueType], Awaitable[Future[_NewValueType]]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
async def async_alt(function: Callable[[_ErrorType], _NewErrorType], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_ValueType, _NewErrorType]: ...
async def async_lash(function: Callable[[_ErrorType], Kind2[FutureResult, _ValueType, _NewErrorType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_ValueType, _NewErrorType]: ...
async def async_from_success(container: Future[_NewValueType]) -> Result[_NewValueType, Any]: ...
async def async_from_failure(container: Future[_NewErrorType]) -> Result[Any, _NewErrorType]: ...
async def async_compose_result(function: Callable[[Result[_ValueType, _ErrorType]], Kind2[FutureResult, _NewValueType, _ErrorType]], inner_value: Awaitable[Result[_ValueType, _ErrorType]]) -> Result[_NewValueType, _ErrorType]: ...
