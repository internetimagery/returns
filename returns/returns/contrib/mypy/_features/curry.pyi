from mypy.plugin import FunctionContext as FunctionContext
from mypy.types import CallableType as CallableType, Type as MypyType
from typing import Any, Optional

def analyze(ctx: FunctionContext) -> MypyType: ...

class _ArgTree:
    case: Any = ...
    children: Any = ...
    def __init__(self, case: Optional[CallableType]) -> None: ...

class _CurryFunctionOverloads:
    def __init__(self, original: CallableType, ctx: FunctionContext) -> None: ...
    def build_overloads(self) -> MypyType: ...
