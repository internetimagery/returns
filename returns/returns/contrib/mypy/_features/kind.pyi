from enum import Enum
from mypy.plugin import AttributeContext as AttributeContext, FunctionContext as FunctionContext, MethodContext as MethodContext, MethodSigContext as MethodSigContext
from mypy.types import CallableType as CallableType, Type as MypyType

def attribute_access(ctx: AttributeContext) -> MypyType: ...
def dekind(ctx: FunctionContext) -> MypyType: ...
def kinded_signature(ctx: MethodSigContext) -> CallableType: ...
def kinded_call(ctx: MethodContext) -> MypyType: ...
def kinded_get_descriptor(ctx: MethodContext) -> MypyType: ...

class _KindErrors(str, Enum):
    dekind_not_instance: str = ...
